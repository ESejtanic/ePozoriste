// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ePozoriste.WebAPI.Database;

namespace ePozoriste.WebAPI.Migrations
{
    [DbContext(typeof(ePozoristeContext))]
    [Migration("20220311204352_InitialDB")]
    partial class InitialDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ePozoriste.WebAPI.Database.Dokument", b =>
                {
                    b.Property<int>("DokumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DokumentID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileName")
                        .HasMaxLength(40);

                    b.Property<string>("NazivDokumenta")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<byte[]>("Sadrzaj")
                        .HasColumnType("image");

                    b.HasKey("DokumentId");

                    b.ToTable("Dokument");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.Glumac", b =>
                {
                    b.Property<int>("GlumacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GlumacID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BrojUgovora");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<byte[]>("Slika")
                        .HasColumnType("image");

                    b.HasKey("GlumacId");

                    b.ToTable("Glumac");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.GlumacPredstava", b =>
                {
                    b.Property<int>("GlumacPredstavaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GlumacPredstavaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GlumacId")
                        .HasColumnName("GlumacID");

                    b.Property<int>("PredstavaId")
                        .HasColumnName("PredstavaID");

                    b.HasKey("GlumacPredstavaId");

                    b.HasIndex("GlumacId");

                    b.HasIndex("PredstavaId");

                    b.ToTable("GlumacPredstava");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.Grad", b =>
                {
                    b.Property<int>("GradId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GradID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasMaxLength(30);

                    b.HasKey("GradId");

                    b.ToTable("Grad");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.Komentar", b =>
                {
                    b.Property<int>("KomentarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KomentarID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KupacId")
                        .HasColumnName("KupacID");

                    b.Property<bool>("Odobrena");

                    b.Property<int>("PredstavaId")
                        .HasColumnName("PredstavaID");

                    b.Property<string>("Sadrzaj")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("VrijemeKreiranja")
                        .HasColumnType("datetime");

                    b.HasKey("KomentarId");

                    b.HasIndex("KupacId");

                    b.HasIndex("PredstavaId");

                    b.ToTable("Komentar");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.Korisnik", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KorisnikID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("LozinkaSalt")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("KorisnikId");

                    b.ToTable("Korisnik");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.KorisnikUloga", b =>
                {
                    b.Property<int>("KorisnikUlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KorisnikUlogaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumIzmjene")
                        .HasColumnType("datetime");

                    b.Property<int>("KorisnikId")
                        .HasColumnName("KorisnikID");

                    b.Property<int>("UlogaId")
                        .HasColumnName("UlogaID");

                    b.HasKey("KorisnikUlogaId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("UlogaId");

                    b.ToTable("KorisnikUloga");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.Kupac", b =>
                {
                    b.Property<int>("KupacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KupacID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrojTelefona")
                        .HasMaxLength(20);

                    b.Property<int>("BrojTokena");

                    b.Property<DateTime>("DatumRegistracije")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("LozinkaSalt")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("KupacId");

                    b.ToTable("Kupac");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.KupacNagradnaIgra", b =>
                {
                    b.Property<int>("KupacNagradnaIgraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KupacNagradnaIgraID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KupacId")
                        .HasColumnName("KupacID");

                    b.Property<int>("NagradnaIgraId")
                        .HasColumnName("NagradnaIgraID");

                    b.HasKey("KupacNagradnaIgraId");

                    b.HasIndex("KupacId");

                    b.HasIndex("NagradnaIgraId");

                    b.ToTable("KupacNagradnaIgra");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.NagradnaIgra", b =>
                {
                    b.Property<int>("NagradnaIgraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NagradnaIgraID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KorisnikId")
                        .HasColumnName("KorisnikID");

                    b.Property<DateTime>("Kraj")
                        .HasColumnType("datetime");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Opis")
                        .IsRequired();

                    b.Property<DateTime>("Pocetak")
                        .HasColumnType("datetime");

                    b.HasKey("NagradnaIgraId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("NagradnaIgra");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.Notifikacija", b =>
                {
                    b.Property<int>("NotifikacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NotifikacijaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumSlanja")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsProcitano");

                    b.Property<int>("NovostiId")
                        .HasColumnName("NovostiID");

                    b.HasKey("NotifikacijaId");

                    b.HasIndex("NovostiId");

                    b.ToTable("Notifikacija");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.Novosti", b =>
                {
                    b.Property<int>("NovostiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NovostiID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumVrijemeObjave")
                        .HasColumnType("datetime");

                    b.Property<int>("KorisnikId")
                        .HasColumnName("KorisnikID");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<byte[]>("Slika")
                        .HasColumnType("image");

                    b.Property<string>("Tekst")
                        .IsRequired();

                    b.HasKey("NovostiId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Novosti");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.Predstava", b =>
                {
                    b.Property<int>("PredstavaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PredstavaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("Opis")
                        .HasMaxLength(200);

                    b.Property<string>("Reziser")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<int>("Trajanje");

                    b.Property<int>("ZanrId")
                        .HasColumnName("ZanrID");

                    b.HasKey("PredstavaId");

                    b.HasIndex("ZanrId");

                    b.ToTable("Predstava");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.PredstavaKupac", b =>
                {
                    b.Property<int>("PredstavaKupacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PredstavaKupacID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KupacId")
                        .HasColumnName("KupacID");

                    b.Property<double>("Ocjena");

                    b.Property<int>("PredstavaId")
                        .HasColumnName("PredstavaID");

                    b.HasKey("PredstavaKupacId");

                    b.HasIndex("KupacId");

                    b.HasIndex("PredstavaId");

                    b.ToTable("PredstavaKupac");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.PredstavaUplata", b =>
                {
                    b.Property<int>("PredstavaUplataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PredstavaUplataID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumUplate")
                        .HasColumnType("datetime");

                    b.Property<int>("PredstavaId")
                        .HasColumnName("PredstavaID");

                    b.Property<int>("UplataId")
                        .HasColumnName("UplataID");

                    b.HasKey("PredstavaUplataId");

                    b.HasIndex("PredstavaId");

                    b.HasIndex("UplataId");

                    b.ToTable("PredstavaUplata");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.Prikazivanje", b =>
                {
                    b.Property<int>("PrikazivanjeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PrikazivanjeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<DateTime>("DatumPrikazivanja")
                        .HasColumnType("datetime");

                    b.Property<int>("PredstavaId")
                        .HasColumnName("PredstavaID");

                    b.Property<int>("SalaId")
                        .HasColumnName("SalaID");

                    b.HasKey("PrikazivanjeId");

                    b.HasIndex("PredstavaId");

                    b.HasIndex("SalaId");

                    b.ToTable("Prikazivanje");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.Rezervacije", b =>
                {
                    b.Property<int>("RezervacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RezervacijaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojRezervacije");

                    b.Property<DateTime>("DatumRezervacije")
                        .HasColumnType("datetime");

                    b.Property<int>("KupacId")
                        .HasColumnName("KupacID");

                    b.Property<bool>("Odobrena");

                    b.Property<int>("PrikazivanjeId")
                        .HasColumnName("PrikazivanjeID");

                    b.HasKey("RezervacijaId");

                    b.HasIndex("KupacId");

                    b.HasIndex("PrikazivanjeId");

                    b.ToTable("Rezervacije");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.Sala", b =>
                {
                    b.Property<int>("SalaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SalaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Kapacitet");

                    b.Property<bool>("Klimatizacija");

                    b.Property<string>("Lat");

                    b.Property<string>("Lng");

                    b.Property<string>("Naziv")
                        .HasMaxLength(15);

                    b.HasKey("SalaId");

                    b.ToTable("Sala");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.Sjediste", b =>
                {
                    b.Property<int>("SjedisteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SjedisteID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Kolona");

                    b.Property<int>("Red");

                    b.Property<int>("SalaId")
                        .HasColumnName("SalaID");

                    b.HasKey("SjedisteId");

                    b.HasIndex("SalaId");

                    b.ToTable("Sjediste");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.Sponzor", b =>
                {
                    b.Property<int>("SponzorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SponzorID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrojTelefona")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("SponzorId");

                    b.ToTable("Sponzor");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.Ulaznica", b =>
                {
                    b.Property<int>("UlaznicaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UlaznicaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KupacId")
                        .HasColumnName("KupacID");

                    b.Property<int>("PrikazivanjeId")
                        .HasColumnName("PrikazivanjeID");

                    b.Property<byte[]>("Qrkod")
                        .IsRequired()
                        .HasColumnName("QRKod")
                        .HasColumnType("image");

                    b.Property<int?>("RezervacijaId")
                        .HasColumnName("RezervacijaID");

                    b.Property<int>("SjedisteId")
                        .HasColumnName("SjedisteID");

                    b.HasKey("UlaznicaId");

                    b.HasIndex("KupacId");

                    b.HasIndex("PrikazivanjeId");

                    b.HasIndex("RezervacijaId");

                    b.HasIndex("SjedisteId");

                    b.ToTable("Ulaznica");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.Uloga", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UlogaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("UlogaId");

                    b.ToTable("Uloga");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.Uplata", b =>
                {
                    b.Property<int>("UplataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UplataID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumUplate")
                        .HasColumnType("datetime");

                    b.Property<double>("Iznos");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("SponzorId")
                        .HasColumnName("SponzorID");

                    b.Property<string>("Svrha")
                        .HasMaxLength(200);

                    b.HasKey("UplataId");

                    b.HasIndex("SponzorId");

                    b.ToTable("Uplata");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.Zanr", b =>
                {
                    b.Property<int>("ZanrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ZanrID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("ZanrId");

                    b.ToTable("Zanr");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.GlumacPredstava", b =>
                {
                    b.HasOne("ePozoriste.WebAPI.Database.Glumac", "Glumac")
                        .WithMany("GlumacPredstava")
                        .HasForeignKey("GlumacId")
                        .HasConstraintName("FK__GlumacPre__Gluma__49C3F6B7");

                    b.HasOne("ePozoriste.WebAPI.Database.Predstava", "Predstava")
                        .WithMany("GlumacPredstava")
                        .HasForeignKey("PredstavaId")
                        .HasConstraintName("FK__GlumacPre__Preds__48CFD27E");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.Komentar", b =>
                {
                    b.HasOne("ePozoriste.WebAPI.Database.Kupac", "Kupac")
                        .WithMany("Komentar")
                        .HasForeignKey("KupacId")
                        .HasConstraintName("FK__Komentar__KupacI__693CA210");

                    b.HasOne("ePozoriste.WebAPI.Database.Predstava", "Predstava")
                        .WithMany("Komentar")
                        .HasForeignKey("PredstavaId")
                        .HasConstraintName("FK__Komentar__Predst__6A30C649");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.KorisnikUloga", b =>
                {
                    b.HasOne("ePozoriste.WebAPI.Database.Korisnik", "Korisnik")
                        .WithMany("KorisnikUloga")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__KorisnikU__Koris__656C112C");

                    b.HasOne("ePozoriste.WebAPI.Database.Uloga", "Uloga")
                        .WithMany("KorisnikUloga")
                        .HasForeignKey("UlogaId")
                        .HasConstraintName("FK__KorisnikU__Uloga__66603565");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.KupacNagradnaIgra", b =>
                {
                    b.HasOne("ePozoriste.WebAPI.Database.Kupac", "Kupac")
                        .WithMany("KupacNagradnaIgra")
                        .HasForeignKey("KupacId")
                        .HasConstraintName("FK__KupacNagr__Kupac__73BA3083");

                    b.HasOne("ePozoriste.WebAPI.Database.NagradnaIgra", "NagradnaIgra")
                        .WithMany("KupacNagradnaIgra")
                        .HasForeignKey("NagradnaIgraId")
                        .HasConstraintName("FK__KupacNagr__Nagra__72C60C4A");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.NagradnaIgra", b =>
                {
                    b.HasOne("ePozoriste.WebAPI.Database.Korisnik", "Korisnik")
                        .WithMany("NagradnaIgra")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__NagradnaI__Koris__6FE99F9F");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.Notifikacija", b =>
                {
                    b.HasOne("ePozoriste.WebAPI.Database.Novosti", "Novosti")
                        .WithMany("Notifikacija")
                        .HasForeignKey("NovostiId")
                        .HasConstraintName("FK__Notifikac__Novos__02084FDA");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.Novosti", b =>
                {
                    b.HasOne("ePozoriste.WebAPI.Database.Korisnik", "Korisnik")
                        .WithMany("Novosti")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Novosti__Korisni__7F2BE32F");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.Predstava", b =>
                {
                    b.HasOne("ePozoriste.WebAPI.Database.Zanr", "Zanr")
                        .WithMany("Predstava")
                        .HasForeignKey("ZanrId")
                        .HasConstraintName("FK__Predstava__ZanrI__403A8C7D");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.PredstavaKupac", b =>
                {
                    b.HasOne("ePozoriste.WebAPI.Database.Kupac", "Kupac")
                        .WithMany("PredstavaKupac")
                        .HasForeignKey("KupacId")
                        .HasConstraintName("FK__Predstava__Kupac__5BE2A6F2");

                    b.HasOne("ePozoriste.WebAPI.Database.Predstava", "Predstava")
                        .WithMany("PredstavaKupac")
                        .HasForeignKey("PredstavaId")
                        .HasConstraintName("FK__Predstava__Preds__5AEE82B9");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.PredstavaUplata", b =>
                {
                    b.HasOne("ePozoriste.WebAPI.Database.Predstava", "Predstava")
                        .WithMany("PredstavaUplata")
                        .HasForeignKey("PredstavaId")
                        .HasConstraintName("FK__Predstava__Preds__571DF1D5");

                    b.HasOne("ePozoriste.WebAPI.Database.Uplata", "Uplata")
                        .WithMany("PredstavaUplata")
                        .HasForeignKey("UplataId")
                        .HasConstraintName("FK__Predstava__Uplat__5812160E");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.Prikazivanje", b =>
                {
                    b.HasOne("ePozoriste.WebAPI.Database.Predstava", "Predstava")
                        .WithMany("Prikazivanje")
                        .HasForeignKey("PredstavaId")
                        .HasConstraintName("FK_Prikazivanje_PredstavaID");

                    b.HasOne("ePozoriste.WebAPI.Database.Sala", "Sala")
                        .WithMany("Prikazivanje")
                        .HasForeignKey("SalaId")
                        .HasConstraintName("FK_Prikazivanje_SalaID");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.Rezervacije", b =>
                {
                    b.HasOne("ePozoriste.WebAPI.Database.Kupac", "Kupac")
                        .WithMany("Rezervacije")
                        .HasForeignKey("KupacId")
                        .HasConstraintName("FK__Rezervaci__Kupac__4E88ABD4");

                    b.HasOne("ePozoriste.WebAPI.Database.Prikazivanje", "Prikazivanje")
                        .WithMany("Rezervacije")
                        .HasForeignKey("PrikazivanjeId")
                        .HasConstraintName("FK__Rezervaci__Prika__4F7CD00D");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.Sjediste", b =>
                {
                    b.HasOne("ePozoriste.WebAPI.Database.Sala", "Sala")
                        .WithMany("Sjediste")
                        .HasForeignKey("SalaId")
                        .HasConstraintName("FK__Sjediste__SalaID__3B75D760");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.Ulaznica", b =>
                {
                    b.HasOne("ePozoriste.WebAPI.Database.Kupac", "Kupac")
                        .WithMany("Ulaznica")
                        .HasForeignKey("KupacId")
                        .HasConstraintName("FK__Ulaznica__KupacI__787EE5A0");

                    b.HasOne("ePozoriste.WebAPI.Database.Prikazivanje", "Prikazivanje")
                        .WithMany("Ulaznica")
                        .HasForeignKey("PrikazivanjeId")
                        .HasConstraintName("FK__Ulaznica__Prikaz__76969D2E");

                    b.HasOne("ePozoriste.WebAPI.Database.Rezervacije", "Rezervacija")
                        .WithMany("Ulaznica")
                        .HasForeignKey("RezervacijaId")
                        .HasConstraintName("FK__Ulaznica__Rezerv__797309D9");

                    b.HasOne("ePozoriste.WebAPI.Database.Sjediste", "Sjediste")
                        .WithMany("Ulaznica")
                        .HasForeignKey("SjedisteId")
                        .HasConstraintName("FK__Ulaznica__Sjedis__778AC167");
                });

            modelBuilder.Entity("ePozoriste.WebAPI.Database.Uplata", b =>
                {
                    b.HasOne("ePozoriste.WebAPI.Database.Sponzor", "Sponzor")
                        .WithMany("Uplata")
                        .HasForeignKey("SponzorId")
                        .HasConstraintName("FK__Uplata__SponzorI__5441852A");
                });
#pragma warning restore 612, 618
        }
    }
}
